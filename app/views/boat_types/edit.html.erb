<div class = "row">
    <div class = "small-12 columns">
        <%= link_to 'К странице лодки', @boat_type %> |
        <%= link_to 'К списку типов лодок', manage_boat_types_path %>
    </div>
</div>

<div class = "row tb-pad-m">
    <div class = "small-12 columns">
        <ul class = 'bb-inline-menu' data-tabs id="bb-tabs" data-deep-link="false" data-turbolinks="false">
            <li class = 'tabs-title is-active'>
                <a href="#main">Основные данные</a>
            </li>
            <li class = 'tabs-title '>
               <a href="#photos">Фото</a>
            </li>
            <li class = 'tabs-title '>
               <a href="#option_groups">Наборы опций</a>
            </li>
            <li class = 'tabs-title '>
               <a href="#modifications">Модификации</a>
            </li>
        </ul>
    </div>
</div>
<div class = "tabs-content" data-tabs-content="bb-tabs">
    <div class = 'tabs-panel is-active' id="main">
        <%= render 'form', boat_type: @boat_type %>
    </div>
    <div class = 'tabs-panel'  id="photos">
        <div class = "row tb-pad-s">
          <div class="small-12 columns">
              <%= form_for(@boat_type, html: {class: "dropzone"}) do |f| %>
                  <%= f.fields_for :photos_attributes do |ph| %>
                      <%= ph.hidden_field :uploader_id, value: current_user.id %>
                  <%end%>
              <%end%>
          </div>
        </div>
        <div id = "uploaded-photos-container" data-entity-id = "<%= @boat_type.id %>" data-entity-name = "boat_type" class="row small-up-2 medium-up-3 tb-pad-s"></div>
      
    </div>
    <div class = 'tabs-panel' id = "option_groups"> 
        
        <div class="row">
            <div class="small-12 columns">
                <% if @boat_type.need_update_local_file? %>
                <script type = 'text/javascript'>
                    var url = "/boat_types/<%= @boat_type.id %>";
                    var importEntities = function()
                {
                    var entArr = new Array();
                    var j = 0;
                    for(i=FirstElement; i<LastElement; i++)
                    {
                        var l = lodka[i];
                        entArr[j] = {
                                        arr_id: i,
                                        rec_type: l.RecType,
                                        rec_level: l.RecLevel,
                                        hidden: l.Hidden,
                                        group_hidden: l.GroupHidden,
                                        rec_fixed_invisibility: l.RecFixedInvisibility,
                                        param_code: l.ParamCode,
                                        param_name: l.ParamName,
                                        comment: l.Comment,
                                        nom_std_compl: l.NomStdCompl,
                                        checked: l.Checked,
                                        level_checked: l.LevelChecked + "",
                                        enabled: l.Enabled,
                                        start_enabled: l.StartEnabled,
                                        std_comp_sostav: l.StdCompSostav + "",
                                        std_comp_option: l.StdCompOptions + "",
                                        std_comp_select: l.StdCompSelect + "",
                                        std_comp_enable: l.StdCompEnable + "",
                                        std_comp_prefer: l.StdCompPrefer + "",
                                        sel_if_y: l.SelIfY + "",
                                        sel_if_n: l.SelIfN + "",
                                        de_sel_if_y: l.DeSelIfY + "",
                                        de_sel_if_n: l.DeSelIfN + "",
                                        en_if_y: l.EnIfY + "",
                                        en_if_n: l.EnIfN + "",
                                        dis_if_y: l.DisIfY + "",
                                        dis_if_n: l.DisIfN + "",
                                        price: l.Price,
                                        amount: l.Amount + ""
                                      };
                                      j++;
                    }
                    if(entArr.length > 0)
                    {
                        $.post(
                                url+"/add_configurator_entity",
                                {
                                        boat_type: {configurator_entities_attributes: entArr} 
                                      },
                                function(data)
                                      {
                                          if (data.status == 'ok')
                                          {
                                              Turbolinks.visit(url+'/edit'+window.location.hash);
                                          }
                                          
                                      },
                                       'json'  
                              );
                    }
                    
                }
                    var checkOptions = function()
                {
                    if (lodka != null && lodka != undefined)
                        {
                            $("#import-but").show();
                            console.log(window.location + "/add_configurator_entity")
                        } 
                }
                    document.addEventListener("turbolinks:load", checkOptions);
    
                </script>
                    
                <p>Файл c данными конфигуратора <%= @confFileExists ? "найден" : "не найден" %> по адресу <%= @boat_type.cnf_data_file_url %></p>
                <div id = 'option-container'>
                    <a id = 'import-but' class = 'button' style = 'display:none;' onclick = 'importEntities()'>Начать импорт</a>
                </div>
                <%else%>
                    <p>Файл c данными конфигуратора <%= @confFileExists ? "найден" : "не найден" %> по адресу <%= @boat_type.cnf_data_file_url %> </p>
                <%end%>
                <%# react_component 'BoatConfigurator', { data: @boat_type.configurator_entities.order("arr_id ASC")} %>
                <%
                    entities = @boat_type.configurator_entities.order("arr_id ASC")
                %>
                <% if entities.size == 0 %>
                    <p>Список опций для <%= @boat_type.catalog_name %> пуст</p>
                <%else%>
                    <% entities.length.times do |i| %>
                        <% if entities[i].rec_type == 'Группа' and entities[i].rec_level == "1" %>
                            
                            <div class = 'row'>
                                <div class = 'small-12 medium-10 medium-centered columns'>
                                    <h4>
                                        <%= entities[i].param_name %>
                                    </h4>
                                    <table>
                                        <%j=i+1%>
                                        <% begin %>
                                            
                                            <% break if entities[j].rec_level == "1" %>
                                            <% 
                                                if entities[j].param_code.blank? 
                                                    j+=1
                                                    next
                                                end
                                            %>
                                            <tr>
                                                <td>
                                                    <%= entities[j].param_name %>
                                                </td>
                                                <td align='right'>
                                                    <%= entities[j].price > 0 ? entities[j].price.to_s + ' ₽' : '' %>
                                                </td>
                                            </tr>
                                            <%j+=1%>
                                        <% end while(j<entities.length) %>
                                    </table>
                                </div>
                            </div>
                        <%end%>
                    <%end%>
                <%end%>
            </div>
        </div>
    </div>
    <div class = "tabs-panel" id = "modifications">     
        <div class="row">
            <div class="small-12 columns">
                <h4>
                    Активные модификации
                </h4>
                <% if @boat_type.active_modifications.blank? %>
                    <p>
                        Нет активных модификаций.
                    </p>
                <%else%>
                    <%# render "modifications_table", modifications: @boat_type.active_modifications %>
                <%end%>
                
            </div>
        </div>
        <% if !@boat_type.not_active_modifications.blank? %>
            <div class="row">
                <div class="small-12 columns">
                    <h3>
                        Не активные модификации
                    </h3>
                    <%#render "modifications_table", modifications: @boat_type.not_active_modifications %>
                </div>
            </div>
        <%end%>
    </div>
</div>



